---
import '@/styles/rpg/shop-cards.scss';
import {api5eUrl, type Fluff, getFluffImage} from "../../utils/rpg/5e-common";
import {encodeHash} from "../../utils/rpg/5e-urls";
import {ItemType, SpellSchool} from "../../utils/rpg/5e-enum";
import {ItemIcons, MagicSchoolIcons} from "../../content/rpg/icons";

export interface Props {
    shopData: {
        data: any;
    };
}

const { shopData } = Astro.props;

interface ShopItem {
    name: string;
    source: string;
    count?: number;
    value: number;
    rarity?: string;
    type?: ItemType | "staff" | "wondrous";
    fluff?: Fluff;
    spell?: boolean;
    level?: number;
    school?: string;
    container?: {name: string, source: string, show: string};
}

const items: ShopItem[] = shopData.data;

const rarityOrder = [
    "artifact",
    "varies",
    "legendary",
    "very rare",
    "rare",
    "uncommon",
    "common",
    "none",
]

const sortedItems = items.sort((a, b) => {
    if (a.rarity && b.rarity) {
        return rarityOrder.indexOf(a.rarity.toLowerCase()) - rarityOrder.indexOf(b.rarity.toLowerCase());
    } else {
        const ax = a.spell ? 0 : 1;
        const bx = b.spell ? 0 : 1;
        return ax - bx;
    }
});

const getUrl = (item: ShopItem) => `${api5eUrl}/${item.spell ? 'spells' : 'items'}.html#${encodeHash(item)}`;

const getDefaultImage = (item: ShopItem) => {
    let icon = ItemIcons[item.type!!.split("|")[0]];
    if (!icon) icon = ItemIcons.default;
    return `/assets/rpg/icons/${icon}`;
}

const getSpellSchoolImage = (item: ShopItem) => {
    const icon = MagicSchoolIcons[item.school!!];
    return `/assets/rpg/icons/schools/${icon}`;
}

const getSpellLevelImage = (item: ShopItem) => {
    return `/assets/rpg/icons/spelllevel/spell${item.level!!}.webp`;
}

---

<div class="shop">
    <ul>
        {sortedItems.map((item) => {
            const name = item.name
                + ((item.container?.show) ? ` (${item.container?.show})` : '')
                + ((item.count && item.count > 1) ? ` (x${item.count})` : '')
            const price = (item.value / 100).toFixed(0);
            const id = item.name.replace(/\s+/g, '-').toLowerCase();

            if (!item.spell) {
                const rarity = item.rarity.toLowerCase().replace(" ", "-");
                let imageUrl = getFluffImage(item);
                const useSvg = !imageUrl;
                if (useSvg) imageUrl = getDefaultImage(item);
                const styleVar = useSvg ? "mask-image" : "background-image";
                return (
                        <li class={`shop-card rarity-${rarity}`} id={id}>
                            <a href={getUrl(item)}>
                                <div class="content">
                                    <h4 class="name">{name}</h4>
                                    <div class={`product ${useSvg ? 'icon-svg' : ''}`} style={`${styleVar}: url('${imageUrl}')`}>
                                    </div>
                                    <p class="price">{price} <span class="coin-icon">ðŸª™</span></p>
                                </div>
                            </a>
                        </li>
                );
            } else {
                const schoolIcon = getSpellSchoolImage(item);
                const levelIcon = getSpellLevelImage(item);
                const spellSchool = Object.keys(SpellSchool).find(key => SpellSchool[key] === item.school)?.toLowerCase();

                return <li class={`shop-card spell-level-${item.level} spell-${spellSchool}`} id={id}>
                    <a href={getUrl(item)}>
                        <div class="content">
                            <h4 class="name">{name}</h4>
                            <div class="product spell">
                                <div class="icon-svg" style={`mask-image: url('${schoolIcon}')`}>
                                </div>
                            </div>
                            <div class="level">
                                <div class="icon" style={`background-image: url('${levelIcon}')`}></div>
                                <span>{item.level}</span>
                            </div>
                            <p class="price">{price} <span class="coin-icon">ðŸª™</span></p>
                        </div>
                    </a>
                </li>
            }
        })}
    </ul>
</div>
